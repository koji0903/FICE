/**********************************************************************/
/*                                                                    */
/* K0R series PORT dec macro                                          */
/*                                                                    */
/*   [ port offset decoder ] , 4 address ( PL , PM , PU , PMC )       */
/*                                                                    */
/*    Module   : QPK0RDF1V1                                           */
/*    Date     : 2010/01/07                                           */
/*    Revision : 1.00                                                 */
/*    Designer : S.Nakata(NMS)                                        */
/*    Note     :                                                      */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* <<入力信号>>                                         <<接続先>>    */
/* PADDR6      : APBアドレス信号                        APB Bridge    */
/* PADDR5      : APBアドレス信号                        APB Bridge    */
/* PADDR4      : APBアドレス信号                        APB Bridge    */
/*                                                                    */
/* <<出力信号>>                                         <<接続先>>    */
/* AD_PL       : PLアドレス選択信号                     port control  */
/* AD_PM       : PMアドレス選択信号                     port control  */
/* AD_PU       : PUアドレス選択信号                     port control  */
/* AD_PMC      : PMCアドレス選択信号                    port control  */
/*                                                                    */
/**********************************************************************/

module	QPK0RDF1V1 ( PADDR6 , PADDR5 , PADDR4 , AD_PL , AD_PM , AD_PU , AD_PMC ) ;

        input           PADDR6  , PADDR5  , PADDR4 ;
	output		AD_PL , AD_PM , AD_PU , AD_PMC ;

        parameter       PL_DEC = 3'b000 ;
        parameter       PM_DEC = 3'b010 ;
        parameter       PU_DEC = 3'b011 ;
        parameter       PMC_DEC = 3'b110 ;

	reg		AD_PL , AD_PM , AD_PU , AD_PMC ;

//	always @ ( PADDR6 or PADDR5 or PADDR4 ) begin
//	    casex ( { PADDR6 , PADDR5 , PADDR4 } )    // synopsys parallel_case
//		PL_DEC  : { AD_PL , AD_PM , AD_PU } <=  3'b100 ;
//		PM_DEC  : { AD_PL , AD_PM , AD_PU } <=  3'b010 ;
//		PU_DEC  : { AD_PL , AD_PM , AD_PU } <=  3'b001 ;
//		default : { AD_PL , AD_PM , AD_PU } <=  3'b000 ;
//	    endcase
//	end

	always @ ( PADDR6 or PADDR5 or PADDR4 ) begin
            casex ( { PADDR6 , PADDR5 , PADDR4 } )    // synopsys parallel_case
		PL_DEC  : { AD_PL , AD_PM , AD_PU , AD_PMC } =  4'b1000 ;
		PM_DEC  : { AD_PL , AD_PM , AD_PU , AD_PMC } =  4'b0100 ;
		PU_DEC  : { AD_PL , AD_PM , AD_PU , AD_PMC } =  4'b0010 ;
		PMC_DEC : { AD_PL , AD_PM , AD_PU , AD_PMC } =  4'b0001 ;
		default : { AD_PL , AD_PM , AD_PU , AD_PMC } =  4'b0000 ;
	    endcase
	end

endmodule
