##################################################
##
## Constraint file for Synplify Pro
##   Generated by FICE(mksdc) ver 0.9.448
##   time : Thu Aug 19 17:14:38 +0900 2010
##
##################################################


#
#  Constraint for ICE Macro
#

#
# CLOCK Attribute
#
# ice system
define_clock { n:CLK30MHZ_GB } -name { clk30mhz_gb } -freq 30.000 -clockgroup clk30mhzgb -route 0.000;
# ice system(dcm)
define_clock { n:CLK60MHZ } -name { clk60mhz } -freq 60.000 -clockgroup clk60mhz -route 0.000;
# usb
define_clock { n:USBCLK } -name { usbclk } -freq 20.000 -clockgroup usb -route 0.000;
# host interface
define_clock { n:ice.ICEWR } -name { icewr } -freq 2.000 -clockgroup icewr -route 0.000;
# pseudo-emulation
define_clock { n:USBIFWR } -name { usbifwr } -freq 2.000 -clockgroup usbifwr -route 0.000;
define_clock { n:ice.timetagv2.CLK240M } -name { clk240mhz } -freq 240 -clockgroup clk120mhz -route 0;
define_clock { n:chiptop.h_rosc.CLK160M } -name { clk160mhz } -freq 160 -clockgroup clk160m -route 0;
# for internal clock

#
# LOGIC Attribute
#
define_false_path  -to { i:ice.host_interface.usb2usbif.hi_read_data* };
define_false_path  -to { i:ice.host_interface.usbif2ice.iceifa* };
define_false_path  -to { i:ice.host_interface.usbif2ice.iceifaclk_d2 };
define_false_path  -from { i:ice.host_interface.VDDLEV* };
define_false_path  -to { i:ice.host_interface.snatch.en_snatch };
define_false_path  -through { n:ice.host_interface.snatch.ICEDO* n:ice.host_interface.snatch.ICEDO*}  -through {n:ice.host_interface.snatch.MDR*};
define_false_path  -to { i:ice.break.STBRELESV };
define_false_path  -through { n:ice.ICERESB };
define_false_path  -to { i:ice.emem.rom.clksel.low1_p };
define_false_path  -to { i:ice.emem.rom.clksel.clksel_resetb_p };
define_false_path  -to { i:ice.emem.rom.clksel.clksel_p };
define_attribute { USBCLK } { syn_noclockbuf } { 1 };
define_attribute { n:ice.ICEWR } { syn_noclockbuf } { 1 };
define_attribute { n:RESB } { syn_noclockbuf } { 1 };
define_attribute { i:ice.trace.trdata.pcwaitf_l } { syn_noclockbuf } { 1 };
# flash_cp
define_false_path -from {i:chiptop.chip.flash_cp.*.*.*};
define_false_path -from {i:chiptop.chip.flash_cp.*.*.*.*};
define_false_path -to {i:chiptop.chip.flash_cp.*.*.*};
define_false_path -to {i:chiptop.chip.flash_cp.*.*.*.*};
# timetag
define_path_delay -from {{i:ice.timetagv2.tag[*]}} -to {{i:ice.trace.trdata.fch_data_l2[*]}} -max 3;
define_path_delay -from {{i:ice.timetagv2.TAGOVF}} -to {{i:ice.trace.trdata.tagovf_l1}} -max 3

#
# GROBAL
#
define_global_attribute  { syn_forward_io_constraints } { 0 };
define_global_attribute  { xc_use_timespec_for_io } { 0 };
define_global_attribute  { syn_useioff } { 1 };
define_global_attribute  { xc_fast_auto } { 1 };



#
#  create_clock
#


# create_clock -name BBCLK [get_pins csc/cg/hioscctl/fmain_sel/cksel_fdsc/clk_gate/N01] -period $Tclk ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:89 )
define_clock { n:chiptop.chip.csc.cg.hioscctl.fmain_sel.fih_p } -name { BBCLK } -period 29.0 -clockgroup BBCLK -route 0.000

# create_clock -name FMX4 [get_pins csc/cg/mosccnt/fmx4_cts/root/N01] -period  $Tclk        ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:86 )
define_clock { n:chiptop.chip.csc.cg.mosccnt.fmx4 } -name { FMX4 } -period 29.0 -clockgroup FMX4 -route 0.000

# create_clock -name R32MCLK [get_pins h_rosc/R32MOUT] -period $Tclk  ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:114 )
define_clock { n:chiptop.h_rosc.R32MOUT } -name { R32MCLK } -period 29.0 -clockgroup R32MCLK -route 0.000

# create_clock -name OCDCLK [get_pins ocd/main/uart/uart_bcounter/root/C3/N01] -period $Tclk  ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:96 )
define_clock { n:chiptop.chip.ocd.main.uart.sclock_16m } -name { OCDCLK } -period 29.0 -clockgroup OCDCLK -route 0.000

# create_clock -name LVICLK [get_pins csc/rg/lvictl/counter/U19/N01] -period $Tclk  ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:108 )
define_clock { n:chiptop.chip.csc.rg.lvictl.counter } -name { LVICLK } -period 29.0 -clockgroup LVICLK -route 0.000

# create_clock -name FMAIN_PCLBUZ [get_pins pclbuz/fmain_cts/root/N01] -period  $Tclk     ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:92 )
define_clock { n:chiptop.chip.pclbuz.fmain_scck } -name { FMAIN_PCLBUZ } -period 29.0 -clockgroup FMAIN_PCLBUZ -route 0.000

# create_clock -name FCLK [get_pins csc/cg/tbase/fclk_cts/root/N01] -period  $Tclk          ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:80 )
define_clock { n:chiptop.chip.csc.cg.tbase.fclk } -name { FCLK } -period 29.0 -clockgroup FCLK -route 0.000

# create_clock -name FIH_LVI [get_pins csc/rg/lvictl/counter/fil15kin_mux/clk_gate2/N01] -period $Tclk  ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:110 )
define_clock { n:chiptop.chip.csc.rg.lvictl.counter.fil15kin } -name { FIH_LVI } -period 29.0 -clockgroup FIH_LVI -route 0.000

# create_clock -name FSUB_PCLBUZ [get_pins pclbuz/fsub_cts/root/N01] -period  $Tclk     ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:93 )
define_clock { n:chiptop.chip.pclbuz.fsub_scck } -name { FSUB_PCLBUZ } -period 29.0 -clockgroup FSUB_PCLBUZ -route 0.000

# create_clock -name FIH [get_pins csc/cg/hioscctl/fmain_sel/fih_cts/root/N01] -period  $Tclk         ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:83 )
define_clock { n:chiptop.chip.csc.cg.hioscctl.fmain_sel.fih } -name { FIH } -period 29.0 -clockgroup FIH -route 0.000

# create_clock -name SCANCLK [get_pins modectl/modectl_tport/scanbuf1/*/N01] -period $Sclk ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:126 )
# Removed because of tool limitation or removed macro on ICE

# create_clock -name FIL [get_pins l_rosc/LOSCOUT] -period $FILclk ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:122 )
define_clock { n:chiptop.l_rosc.LOSCOUT } -name { FIL } -period 61866.0 -clockgroup FIL -route 0.000





#
#  set_case_analysis
#


# set_case_analysis 0 [get_pins modectl/TESSCAN3] ( _device_scr/d78f1070_mode.scr L:34 )
define_attribute { t:chiptop.chip.modectl.TESSCAN3 } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/TESDBT] ( _device_scr/d78f1070_mode.scr L:53 )
define_attribute { t:chiptop.chip.modectl.TESDBT } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/modectl_top/modectl_main/test_mode/tesinst] ( _device_scr/d78f1070_mode.scr L:41 )
define_attribute { t:chiptop.chip.modectl.modectl_top.modectl_main.test_mode.tesinst } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/BBTESINST] ( _device_scr/d78f1070_mode.scr L:38 )
define_attribute { t:chiptop.chip.modectl.BBTESINST } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/TESSCAN2] ( _device_scr/d78f1070_mode.scr L:33 )
define_attribute { t:chiptop.chip.modectl.TESSCAN2 } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/TESUSR] ( _device_scr/d78f1070_mode.scr L:50 )
define_attribute { t:chiptop.chip.modectl.TESUSR } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/OPTMDUMP] ( _device_scr/d78f1070_mode.scr L:62 )
define_attribute { t:chiptop.chip.modectl.OPTMDUMP } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/TESSCAN1] ( _device_scr/d78f1070_mode.scr L:32 )
define_attribute { t:chiptop.chip.modectl.TESSCAN1 } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/PTESINST] ( _device_scr/d78f1070_mode.scr L:44 )
define_attribute { t:chiptop.chip.modectl.PTESINST } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/test_se] ( _device_scr/d78f1070_mode.scr L:20 )
define_attribute { t:chiptop.chip.modectl.test_se } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/modectl_tport/scanbuf2/scandrive/N01] ( _device_scr/d78f1070_mode.scr L:23 )
define_attribute { t:chiptop.chip.modectl.modectl_tport.scanbuf2.scandrive } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/SCANEN] ( _device_scr/d78f1070_mode.scr L:19 )
define_attribute { t:chiptop.chip.modectl.SCANEN } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/TESTMOD] ( _device_scr/d78f1070_mode.scr L:29 )
define_attribute { t:chiptop.chip.modectl.TESTMOD } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/OPTBCT] ( _device_scr/d78f1070_mode.scr L:56 )
define_attribute { t:chiptop.chip.modectl.OPTBCT } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/OPTIDDQ] ( _device_scr/d78f1070_mode.scr L:47 )
define_attribute { t:chiptop.chip.modectl.OPTIDDQ } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/OPTDFL] ( _device_scr/d78f1070_mode.scr L:59 )
define_attribute { t:chiptop.chip.modectl.OPTDFL } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/TESSCAN4] ( _device_scr/d78f1070_mode.scr L:35 )
define_attribute { t:chiptop.chip.modectl.TESSCAN4 } xc_pulldown { 1 }

# set_case_analysis 0 [get_pins modectl/SCANMODE] ( _device_scr/d78f1070_mode.scr L:26 )
define_attribute { t:chiptop.chip.modectl.SCANMODE } xc_pulldown { 1 }





#
#  set_dont_touch_network
#


# set_dont_touch_network [all_clocks] ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:128 )
# Removed because of tool limitation or removed macro on ICE

# set_dont_touch_network [get_pins modectl/modectl_tport/scanbuf1/*/N01] ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:129 )
define_attribute { i:chiptop.chip.modectl.modectl_tport.scanbuf1.*.* } syn_keep { 1 }





#
#  set_multicycle_path
#


# set_multicycle_path -hold 3 -thr cpu/* -to flash_data/DCE* ( _device_scr/d78f1070_chip.scr_100719 L:171 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 1 -hold -end -from [list fcb/wcbctl/af_reg_*_/H02]   -to [list flash_data/DA*] ( _device_scr/d78f1070_chip.scr_100719 L:174 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path -hold 3 -thr cpu/* -to flash_data/DA* ( _device_scr/d78f1070_chip.scr_100719 L:170 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 1 -hold -end -thr   fcb/* -to [list flash_cp/DCE*] ( _device_scr/d78f1070_chip.scr_100719 L:177 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 1 -hold -thr cpu/HLTST -thr modectl/SELTAF -thr cibc/SELTAF ( _device_scr/d78f1070_chip.scr_100719 L:132 )
# Limit Constraint. the constraint include "setup/hold" option is limited

# set_multicycle_path -hold 3 -thr cpu/* -to flash_cp/DCE* ( _device_scr/d78f1070_chip.scr_100719 L:172 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 1 -hold  -to [list ram0/STN] ( _device_scr/d78f1070_chip.scr_100719 L:74 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 1 -hold -end -from [list fcb/regrw/flpmc_reg_4_/H02] -to [list flash_data/DA*] ( _device_scr/d78f1070_chip.scr_100719 L:175 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 2 -setup -to [list ram0/STN] ( _device_scr/d78f1070_chip.scr_100719 L:73 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 2 -setup -end  -through  [get_pins [list fcb/ONBD fcb/FLMEMTES fcb/ICENOECC fcb/ICEFLERR fcb/TFWEPR fcb/SCANMODE]] ( _device_scr/d78f1070_chip.scr_100719 L:122 )
define_multicycle_path -through { n:chiptop.chip.fcb.ONBD } { 2 }
define_multicycle_path -through { n:chiptop.chip.fcb.FLMEMTES } { 2 }
define_multicycle_path -through { n:chiptop.chip.fcb.ICENOECC } { 2 }
define_multicycle_path -through { n:chiptop.chip.fcb.ICEFLERR } { 2 }
define_multicycle_path -through { n:chiptop.chip.fcb.TFWEPR } { 2 }
define_multicycle_path -through { n:chiptop.chip.fcb.SCANMODE } { 2 }

# set_multicycle_path 1 -hold -end -thr   fcb/* -to [list flash_data/DCE*] ( _device_scr/d78f1070_chip.scr_100719 L:176 )
# Removed because of tool limitation or removed macro on ICE

# set_multicycle_path 1 -hold  -end  -through  [get_pins [list fcb/ONBD fcb/FLMEMTES fcb/ICENOECC fcb/ICEFLERR fcb/TFWEPR fcb/SCANMODE]] ( _device_scr/d78f1070_chip.scr_100719 L:123 )
# Limit Constraint. the constraint include "setup/hold" option is limited

# set_multicycle_path 2 -setup -thr cpu/HLTST -thr modectl/SELTAF -thr cibc/SELTAF ( _device_scr/d78f1070_chip.scr_100719 L:131 )
define_multicycle_path -through { n:chiptop.chip.cpu.HLTST } -through { n:chiptop.chip.modectl.SELTAF } -through { n:chiptop.chip.cibc.SELTAF } { 2 }





#
#  set_false_path
#


# set_false_path -from [all_clocks] -to [get_clocks SCANCLK] ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:132 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -setup -from [list cpu/clk/DMA_read_reg/H02] -to $CPUREG ( _device_scr/d78f1070_chip.scr_100719 L:117 )
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.*_bank*[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.SP_sv[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.SP_usr[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.IE }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.Z }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.RBS[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.AC }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.ISP[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.CY }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.CS_sv[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.CS_usr[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.ES_sv[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.ES_usr[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -to { i:chiptop.chip.cpu.alu.MAA }

# set_false_path -setup -through [list csc/cg/tbase/stby/stpst3_reg/N01] -to [list csc/cg/tbase/stby/stpst3_reg/H03] ( _device_scr/d78f1070_chip.scr_100719 L:86 )
define_false_path -through { n:chiptop.chip.csc.cg.tbase.stpst3 } -to { i:chiptop.chip.csc.cg.tbase.stpst3 }

# set_false_path -from csc/rg/lvictl/main/lvimd_r_2_reg -to csc/rg/lvictl/main/lvimd_p_reg_0_/H03 ( _device_scr/d78f1070_chip.scr_100719 L:210 )
define_false_path -from { i:chiptop.chip.csc.rg.lvictl.main.lvimd_r_2 } -to { i:chiptop.chip.csc.rg.lvictl.main.lvimd_p[0] }

# set_false_path -setup -from [all_inputs] ( _device_scr/d78f1070_chip.scr_100719 L:26 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -setup -through [list csc/cg/tbase/stby/stpst3_reg/N01] -to [list csc/cg/tbase/stby/stpst2_reg/H03] ( _device_scr/d78f1070_chip.scr_100719 L:85 )
define_false_path -through { n:chiptop.chip.csc.cg.tbase.stpst3 } -to { i:chiptop.chip.csc.cg.tbase.stpst2 }

# set_false_path -setup -from [list cpu/clk/DMA_read_reg/H02] -through [list cpu/PSELCPU] ( _device_scr/d78f1070_chip.scr_100719 L:113 )
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_read } -through { n:chiptop.chip.cpu.PSELCPU }

# set_false_path -setup -through cpu/PA*  -through cibc/nvmchk/EXAmsk_en_o -to flash_code/EXA ( _device_scr/d78f1070_chip.scr_100719 L:93 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -setup -through [list cpu/DMAMA*] -through [list cpu/PSELCPU] ( _device_scr/d78f1070_chip.scr_100719 L:112 )
define_multicycle_path -through { n:chiptop.chip.cpu.DMAMA* } -through { n:chiptop.chip.cpu.PSELCPU } { 3 }

# set_false_path -setup -through cpu/PA*  -through cibc/nvmchk/EXAmsk_en_o -to flash_cp/CE ( _device_scr/d78f1070_chip.scr_100719 L:94 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -thr cibc/OPWDEN -to ram0/* ( _device_scr/d78f1070_chip.scr_100719 L:79 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -from csc/rg/lvictl/main/lvimd_r_1_reg -to csc/rg/lvictl/main/lvimd_p_reg_2_/H03 ( _device_scr/d78f1070_chip.scr_100719 L:216 )
define_false_path -from { i:chiptop.chip.csc.rg.lvictl.main.lvimd_r_1 } -to { i:chiptop.chip.csc.rg.lvictl.main.lvimd_p[2] }

# set_false_path -setup -fall_thr bbr/PENABLE -thr */PRDATA* -thr cpu/MDR* ( _device_scr/d78f1070_chip.scr_100719 L:68 )
define_multicycle_path  -through { n:chiptop.chip.bbr.PENABLE } -through { n:chiptop.chip.*.PRDATA* } -through { n:chiptop.chip.cpu.MDR* } { 3 }

# set_false_path -setup -through [list cpu/DMAMA*] -to $CPUREG ( _device_scr/d78f1070_chip.scr_100719 L:109 )
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.*_bank*[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.SP_sv[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.SP_usr[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.IE }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.Z }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.RBS[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.AC }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.ISP[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.CY }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.CS_sv[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.CS_usr[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.ES_sv[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.ES_usr[*] }
define_false_path -through { n:chiptop.chip.cpu.DMAMA* } -to { i:chiptop.chip.cpu.alu.MAA }

# set_false_path -setup -through cpu/PA*  -through cibc/nvmchk/EXAmsk_en_o -to flash_code/A* ( _device_scr/d78f1070_chip.scr_100719 L:91 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -from csc/rg/lvictl/main/lvimd_r_1_reg -to csc/rg/lvictl/main/lvimd_p_reg_1_/H03 ( _device_scr/d78f1070_chip.scr_100719 L:215 )
define_false_path -from { i:chiptop.chip.csc.rg.lvictl.main.lvimd_r_1 } -to { i:chiptop.chip.csc.rg.lvictl.main.lvimd_p[1] }

# set_false_path -setup -through [list modectl/TESENI*] -through [list port*/TDIN*] ( _device_scr/d78f1070_chip.scr_100719 L:160 )
define_multicycle_path -through { n:chiptop.chip.TESENI* } -through { n:chiptop.chip.TDIN* } { 3 }

# set_false_path -setup -from [list cpu/clk/DMA_write_reg/H02] -through [list cpu/PSELCPU] ( _device_scr/d78f1070_chip.scr_100719 L:114 )
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -through { n:chiptop.chip.cpu.PSELCPU }

# set_false_path -setup -thr port*_iobuf*/iobuf*/DIN* ( _device_scr/d78f1070_chip.scr_100719 L:58 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -from [all_clocks] -to [all_clocks] ( _device_scr/d78f1070_chip.scr_100719 L:12 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -setup -through [list modectl/TESENI*] -through [list port*/PRDATA*] ( _device_scr/d78f1070_chip.scr_100719 L:152 )
define_multicycle_path -through { n:chiptop.chip.TESENI* } -through { n:chiptop.chip.port*.PRDATA* } { 3 }

# set_false_path -from [get_clocks SCANCLK] -to [all_clocks] ( _device_scr/d78f1070_clock.scr_32MHz_29ns L:131 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -from [get_clocks FCLK]  -to [get_pins cibc/fmop/main_trmlv_iref_ck_mux_clk_gate0/H02] ( _device_scr/d78f1070_chip.scr_100719 L:184 )
define_false_path -from { c:FCLK } -to { i:chiptop.chip.cibc.fmop.main.trmlv_iref_ck_mux_clk_gate0 }

# set_false_path -thr cibc/CSPDTFLG -to ram0/* ( _device_scr/d78f1070_chip.scr_100719 L:80 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -setup -through cpu/PA*  -through cibc/nvmchk/EXAmsk_en_o -to flash_code/CE ( _device_scr/d78f1070_chip.scr_100719 L:92 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -setup -through cpu/PA*  -through cibc/nvmchk/ce0msk_en_o -to flash_cp/CE ( _device_scr/d78f1070_chip.scr_100719 L:97 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -setup -through cpu/PA*  -through cibc/nvmchk/ce0msk_en_o -to flash_code/CE ( _device_scr/d78f1070_chip.scr_100719 L:96 )
# Removed because of tool limitation or removed macro on ICE

# set_false_path -from csc/rg/lvictl/main/lvimd_r_2_reg -to csc/rg/lvictl/main/lvimd_p_reg_2_/H03 ( _device_scr/d78f1070_chip.scr_100719 L:212 )
define_false_path -from { i:chiptop.chip.csc.rg.lvictl.main.lvimd_r_2 } -to { i:chiptop.chip.csc.rg.lvictl.main.lvimd_p[2] }

# set_false_path -from [get_clocks FCLK]  -to [get_pins cibc/fmop/main_trmlv_vread_ck_mux_clk_ga_0/H02] ( _device_scr/d78f1070_chip.scr_100719 L:185 )
define_false_path -from { c:FCLK } -to { i:chiptop.chip.cibc.fmop.main.trmlv_vread_ck_mux_clk_ga_0 }

# set_false_path -setup -through [list csc/cg/tbase/stby/stpst3_reg/N01] -to [list csc/cg/tbase/stby/stpst1_reg/H03] ( _device_scr/d78f1070_chip.scr_100719 L:84 )
define_false_path -through { n:chiptop.chip.csc.cg.tbase.stpst3 } -to { i:chiptop.chip.csc.cg.tbase.stpst1 }

# set_false_path -setup -from [list cpu/clk/DMA_write_reg/H02] -to $CPUREG ( _device_scr/d78f1070_chip.scr_100719 L:118 )
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.*_bank*[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.SP_sv[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.SP_usr[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.IE }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.Z }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.RBS[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.AC }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.ISP[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.CY }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.CS_sv[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.CS_usr[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.ES_sv[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.ES_usr[*] }
define_false_path -from { i:chiptop.chip.cpu.clk.DMA_write } -to { i:chiptop.chip.cpu.alu.MAA }

# set_false_path -from csc/rg/lvictl/main/lvimd_r_2_reg -to csc/rg/lvictl/main/lvimd_p_reg_1_/H03 ( _device_scr/d78f1070_chip.scr_100719 L:211 )
define_false_path -from { i:chiptop.chip.csc.rg.lvictl.main.lvimd_r_2 } -to { i:chiptop.chip.csc.rg.lvictl.main.lvimd_p[1] }

# set_false_path -setup -rise_thr bbr/PWRITE -thr */PRDATA* -thr cpu/MDR* ( _device_scr/d78f1070_chip.scr_100719 L:67 )
define_multicycle_path  -through { n:chiptop.chip.bbr.PWRITE } -through { n:chiptop.chip.*.PRDATA* } -through { n:chiptop.chip.cpu.MDR* } { 3 }

# set_false_path -from csc/rg/lvictl/main/lvimd_r_1_reg -to csc/rg/lvictl/main/lvimd_p_reg_0_/H03 ( _device_scr/d78f1070_chip.scr_100719 L:214 )
define_false_path -from { i:chiptop.chip.csc.rg.lvictl.main.lvimd_r_1 } -to { i:chiptop.chip.csc.rg.lvictl.main.lvimd_p[0] }




